[project]
name = "ocr-drag-n-drop-tool"
version = "0.1.0"
description = "A simple drag-and-drop OCR tool for extracting text from images"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "JTG Systems", email = "info@jtgsystems.com"}
]
keywords = ["ocr", "tesseract", "image-processing", "gui", "pyside6"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Graphics :: Capture :: Scanners",
    "Topic :: Text Processing",
]

dependencies = [
    "PySide6>=6.6.0",
    "opencv-python>=4.8.0",
    "pytesseract>=0.3.10",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-qt>=4.2.0",
    "pytest-mock>=3.12.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "types-Pillow>=10.0.0",
]

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.ruff]
line-length = 88
target-version = "py38"

[tool.ruff.lint]
# Enable pycodestyle (`E`), Pyflakes (`F`), isort (`I`), and more
select = [
    "E",     # pycodestyle errors
    "F",     # pyflakes
    "I",     # isort
    "N",     # pep8-naming
    "UP",    # pyupgrade
    "B",     # flake8-bugbear
    "C4",    # flake8-comprehensions
    "SIM",   # flake8-simplify
    "RET",   # flake8-return
    "PTH",   # flake8-use-pathlib
    "PL",    # pylint
    "RUF",   # ruff-specific rules
    "W",     # pycodestyle warnings
    "S",     # flake8-bandit (security)
    "A",     # flake8-builtins
    "COM",   # flake8-commas
    "C90",   # mccabe complexity
]

ignore = [
    "E501",   # line too long (handled by formatter)
    "PLR0913", # too many arguments
    "COM812", # trailing comma (conflicts with formatter)
    "S603",   # subprocess without shell check (not applicable)
    "S607",   # starting a process with a partial path (not applicable)
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # unused imports in __init__.py
"Source/OCR-DRAG-N-Drop-Tool.py" = ["N802"]  # Qt methods use camelCase by design

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_equality = true
strict_optional = true

[[tool.mypy.overrides]]
module = [
    "cv2",
    "pytesseract",
    "PySide6.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--cov=Source",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]
